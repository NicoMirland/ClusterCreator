---
- name: Install New Relic on Kubernetes
  hosts: kube_api_servers[0]
  gather_facts: no
  vars:
    cluster_config: "{{ lookup('file', 'tmp/' + cluster_name + '/cluster_config.json') | from_json }}"
    newrelic_enabled: "{{ cluster_config.newrelic_enabled }}"
    newrelic_low_data_mode: "{{ cluster_config.newrelic.newrelic_low_data_mode }}"
    newrelic_scrape_system_prom: "{{ cluster_config.newrelic.newrelic_scrape_system_prom }}"
    newrelic_ksm_image_tag: "v{{ cluster_config.newrelic.newrelic_ksm_image_tag }}"
    newrelic_namespace: "{{ cluster_config.newrelic.newrelic_namespace }}"
  tasks:
    - name: Generate New Relic manifest
#      when: newrelic_enabled == "true" and newrelic_license_key != ""
      shell: >
        curl -X POST https://k8s-config-generator.service.newrelic.com/generate -H 'Content-Type: application/json' -d '{"global.cluster":"{{ cluster_name }}", "global.namespace":"{{ newrelic_namespace }}", "newrelic-infrastructure.privileged":"true", "global.lowDataMode":"{{ newrelic_low_data_mode | string | lower }}", "kube-state-metrics.image.tag":"{{ newrelic_ksm_image_tag }}", "kube-state-metrics.enabled":"true", "kubeEvents.enabled":"true", "newrelic-prometheus-agent.enabled":"{{ newrelic_scrape_system_prom | string | lower }}", "newrelic-prometheus-agent.lowDataMode":"{{ newrelic_low_data_mode | string | lower }}", "newrelic-prometheus-agent.config.kubernetes.integrations_filter.enabled":"false", "logging.enabled":"true", "newrelic-logging.lowDataMode":"{{ newrelic_low_data_mode | string | lower }}", "global.licenseKey": "{{ newrelic_license_key }}"}' > /tmp/newrelic.yaml
    - name: Check if New Relic namespace exists
#      when: newrelic_enabled == "true" and newrelic_license_key != ""
      shell: kubectl get namespace {{ newrelic_namespace }} --ignore-not-found
      register: namespace_check
      failed_when: namespace_check.stderr != '' and 'NotFound' not in namespace_check.stderr
      changed_when: false
    - name: Create New Relic namespace
#      when: newrelic_enabled == "true" and newrelic_license_key != "" and namespace_check.stdout == ''
      shell: kubectl create namespace {{ newrelic_namespace }}
    - name: Apply New Relic manifest
#      when: newrelic_enabled == "true" and newrelic_license_key != ""
      shell: kubectl apply -f /tmp/newrelic.yaml
